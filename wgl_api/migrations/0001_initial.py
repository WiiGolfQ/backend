# Generated by Django 5.0.1 on 2024-01-28 08:14

import computedfields.resolver
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('game_id', models.AutoField(primary_key=True, serialize=False)),
                ('game_name', models.CharField(max_length=64)),
                ('speedrun', models.BooleanField(default=True)),
                ('require_livestream', models.BooleanField(default=True)),
                ('best_of', models.SmallIntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Elo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mu', models.DecimalField(decimal_places=1, default=1500, max_digits=5)),
                ('sigma', models.DecimalField(decimal_places=2, default=500.0, max_digits=5)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wgl_api.game')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('discord_id', models.BigIntegerField(primary_key=True, serialize=False, unique=True)),
                ('username', models.CharField(max_length=64, unique=True)),
                ('yt_username', models.CharField(max_length=30, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_username', message='Username can only contain alphanumeric characters, underscores, hyphens, and periods.', regex='^[\\w.-]+$')])),
                ('created_timestamp', models.DateTimeField(auto_now_add=True)),
                ('last_active_timestamp', models.DateTimeField(auto_now_add=True)),
                ('accept_challenges', models.BooleanField(default=True)),
                ('banned', models.BooleanField(default=False)),
                ('elos', models.ManyToManyField(through='wgl_api.Elo', to='wgl_api.game')),
                ('queueing_for', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='players_in_queue', to='wgl_api.game')),
            ],
            options={
                'abstract': False,
            },
            bases=(computedfields.resolver._ComputedFieldsModelBase, models.Model),
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('match_id', models.AutoField(primary_key=True, serialize=False)),
                ('discord_thread_id', models.BigIntegerField(blank=True, null=True)),
                ('timestamp_started', models.DateTimeField(auto_now_add=True)),
                ('timestamp_finished', models.DateTimeField(blank=True, null=True)),
                ('p1_score', models.CharField(editable=False, max_length=12)),
                ('p1_video_url', models.URLField(blank=True, null=True)),
                ('p1_mu_before', models.FloatField(blank=True)),
                ('p1_sigma_before', models.FloatField(blank=True)),
                ('p1_mu_after', models.FloatField(blank=True, editable=False)),
                ('p1_sigma_after', models.FloatField(blank=True, editable=False)),
                ('p2_score', models.CharField(editable=False, max_length=12)),
                ('p2_video_url', models.URLField(blank=True, null=True)),
                ('p2_mu_before', models.FloatField(blank=True)),
                ('p2_sigma_before', models.FloatField(blank=True)),
                ('p2_mu_after', models.FloatField(blank=True, editable=False)),
                ('p2_sigma_after', models.FloatField(blank=True, editable=False)),
                ('predictions', models.JSONField(blank=True, editable=False, null=True)),
                ('active', models.BooleanField(blank=True, editable=False)),
                ('status', models.CharField(choices=[('Cancelled', 'Cancelled'), ('Result contested', 'Result contested'), ('Finished', 'Finished'), ('Ongoing', 'Ongoing'), ('Waiting for livestreams', 'Waiting for livestreams'), ('Waiting for agrees', 'Waiting for agrees')], default='Waiting for livestreams', max_length=23)),
                ('contest_reason', models.CharField(blank=True, max_length=64, null=True)),
                ('result', models.CharField(blank=True, choices=[('1', 'Player 1 wins'), ('2', 'Player 2 wins'), ('D', 'Draw')], max_length=1, null=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wgl_api.game')),
                ('p1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='p1', to='wgl_api.player')),
                ('p2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='p2', to='wgl_api.player')),
            ],
            bases=(computedfields.resolver._ComputedFieldsModelBase, models.Model),
        ),
        migrations.AddField(
            model_name='elo',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wgl_api.player'),
        ),
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('challenge_id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('accepted', models.BooleanField(null=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wgl_api.game')),
                ('challenged', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='challenged', to='wgl_api.player')),
                ('challenger', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='challenger', to='wgl_api.player')),
            ],
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('score_id', models.AutoField(primary_key=True, serialize=False)),
                ('score', models.IntegerField()),
                ('score_formatted', models.CharField(editable=False, max_length=12)),
                ('video_url', models.URLField(null=True)),
                ('verified', models.BooleanField(default=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wgl_api.game')),
                ('match', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='match_scores', to='wgl_api.match')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wgl_api.player')),
            ],
            options={
                'abstract': False,
            },
            bases=(computedfields.resolver._ComputedFieldsModelBase, models.Model),
        ),
        migrations.AddConstraint(
            model_name='match',
            constraint=models.CheckConstraint(check=models.Q(('p1', models.F('p2')), _negated=True), name='different_players'),
        ),
    ]
