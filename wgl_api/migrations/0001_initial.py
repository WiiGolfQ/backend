# Generated by Django 5.0.1 on 2025-01-20 19:36

import computedfields.resolver
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('category_name', models.CharField(max_length=64)),
                ('shortcode', models.CharField(max_length=20, unique=True)),
                ('speedrun', models.BooleanField(default=True)),
                ('require_all_livestreams', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(computedfields.resolver._ComputedFieldsModelBase, models.Model),
        ),
        migrations.CreateModel(
            name='Youtube',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('handle', models.CharField(max_length=30, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_username', message='Username can only contain alphanumeric characters, underscores, hyphens, and periods.', regex='^[\\w.-]+$')])),
                ('video_id', models.CharField(blank=True, max_length=11, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('game_id', models.AutoField(primary_key=True, serialize=False)),
                ('game_name', models.CharField(max_length=64)),
                ('categories', models.ManyToManyField(editable=False, related_name='game_categories', to='wgl_api.category')),
            ],
        ),
        migrations.CreateModel(
            name='Elo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mu', models.SmallIntegerField(default=1500)),
                ('sigma', models.FloatField(default=500.0)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wgl_api.game')),
            ],
        ),
        migrations.AddField(
            model_name='category',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wgl_api.game'),
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('match_id', models.AutoField(primary_key=True, serialize=False)),
                ('discord_thread_id', models.BigIntegerField(blank=True, null=True)),
                ('timestamp_started', models.DateTimeField(auto_now_add=True)),
                ('timestamp_finished', models.DateTimeField(blank=True, null=True)),
                ('num_teams', models.SmallIntegerField(default=2)),
                ('players_per_team', models.SmallIntegerField(default=1)),
                ('active', models.BooleanField(blank=True, editable=False)),
                ('status', models.CharField(choices=[('Cancelled', 'Cancelled'), ('Result contested', 'Result contested'), ('Finished', 'Finished'), ('Ongoing', 'Ongoing'), ('Waiting for livestreams', 'Waiting for livestreams'), ('Waiting for agrees', 'Waiting for agrees')], default='Waiting for livestreams', max_length=23)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wgl_api.category')),
                ('game', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wgl_api.game')),
            ],
            options={
                'abstract': False,
            },
            bases=(computedfields.resolver._ComputedFieldsModelBase, models.Model),
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('discord_id', models.BigIntegerField(primary_key=True, serialize=False, unique=True)),
                ('username', models.CharField(max_length=64, unique=True)),
                ('created_timestamp', models.DateTimeField(auto_now_add=True)),
                ('last_active_timestamp', models.DateTimeField(auto_now_add=True)),
                ('in_queue', models.BooleanField(default=False)),
                ('accept_challenges', models.BooleanField(default=True)),
                ('banned', models.BooleanField(default=False)),
                ('currently_playing_match', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wgl_api.match')),
                ('elos', models.ManyToManyField(through='wgl_api.Elo', to='wgl_api.game')),
                ('queues_for', models.ManyToManyField(blank=True, related_name='players_in_queue', to='wgl_api.game')),
                ('youtube', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wgl_api.youtube')),
            ],
            options={
                'abstract': False,
            },
            bases=(computedfields.resolver._ComputedFieldsModelBase, models.Model),
        ),
        migrations.AddField(
            model_name='elo',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wgl_api.player'),
        ),
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('challenge_id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('accepted', models.BooleanField(null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wgl_api.category')),
                ('challenged', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='challenged', to='wgl_api.player')),
                ('challenger', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='challenger', to='wgl_api.player')),
            ],
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('score_id', models.AutoField(primary_key=True, serialize=False)),
                ('score', models.IntegerField(db_index=True)),
                ('score_formatted', models.CharField(editable=False, max_length=12)),
                ('verified', models.BooleanField(default=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wgl_api.category')),
                ('match', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='match_scores', to='wgl_api.match')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wgl_api.player')),
            ],
            options={
                'abstract': False,
            },
            bases=(computedfields.resolver._ComputedFieldsModelBase, models.Model),
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_num', models.CharField(default='?', max_length=1)),
                ('place', models.SmallIntegerField(null=True)),
                ('score', models.IntegerField(editable=False, null=True)),
                ('score_formatted', models.CharField(editable=False, max_length=12, null=True)),
                ('forfeited', models.BooleanField(default=False)),
                ('category', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wgl_api.category')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wgl_api.match')),
            ],
            options={
                'abstract': False,
            },
            bases=(computedfields.resolver._ComputedFieldsModelBase, models.Model),
        ),
        migrations.AddField(
            model_name='match',
            name='teams',
            field=models.ManyToManyField(related_name='match_teams', to='wgl_api.team'),
        ),
        migrations.CreateModel(
            name='TeamPlayer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(null=True)),
                ('score_formatted', models.CharField(editable=False, max_length=12, null=True)),
                ('video_id', models.CharField(max_length=11, null=True)),
                ('video_timestamp', models.IntegerField(null=True)),
                ('mu_before', models.SmallIntegerField(default=1)),
                ('mu_after', models.SmallIntegerField(blank=True, null=True)),
                ('mu_delta', models.CharField(blank=True, editable=False, max_length=8, null=True)),
                ('sigma_before', models.FloatField(default=1)),
                ('sigma_after', models.FloatField(blank=True, null=True)),
                ('category', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wgl_api.category')),
                ('game', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wgl_api.game')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wgl_api.match')),
                ('player', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='wgl_api.player')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wgl_api.team')),
            ],
            options={
                'abstract': False,
            },
            bases=(computedfields.resolver._ComputedFieldsModelBase, models.Model),
        ),
        migrations.AddField(
            model_name='team',
            name='players',
            field=models.ManyToManyField(related_name='teams', to='wgl_api.teamplayer'),
        ),
    ]
